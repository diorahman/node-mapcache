<?xml version="1.0" encoding="UTF-8"?>
<geocache>
   <cache name="disk" type="disk">
      <base>/tmp</base>
   </cache>
   <source name="cco" type="wms">
      
      <!-- getmap

         extra parameters that will be added to the GetMap request. you can specify any
         parameter here, e.g. VERSION if you want to override the version of the WMS
         request.
         the LAYERS parameter is mandatory.
         usual parameters here are FORMAT , or MAP if using mapserver
      -->
      <getmap>
         <params>
            <FORMAT>image/jpeg</FORMAT>
            <LAYERS>uk,S_2008_p</LAYERS>
         </params>
      </getmap>
      
      <!-- http

         http url and parameters that will be used when making WMS requests
      -->
      <http>
         
         <!-- url

         url of the wms service, without any parameters
         -->
         <url>http://www.channelcoast.org/services/spatial/wms</url>
         
         <!-- headers

            http headers added to request. make sure you know what you are 
            doing when adding a header here, as they take precedence over any
            default headers curl will be adding to the request.
            typical headers that can be added here are User-Agent and Referer.
            
            when adding a <key>value</key> element here, the request to the
            wms source will contain the

            key: value\r\n

            HTTP header.
         -->
         <!--
         <headers>
            <User-Agent>mod-geocache/r175</User-Agent>
            <Referer>http://www.mysite.com?param=2&amp;par=4</Referer>
         </headers>
         -->

         <!-- TODO other http parameters
              * PROXY
              * AUTH
         -->

         <!-- timeout in seconds before bailing out from a request -->
         <connection_timeout>30</connection_timeout>
      </http>
   </source>

   <grid name="BNG">
      <metadata>
         <title>British National Grid</title>
      </metadata>
      <extent>0 0 700000 1300000</extent>
      <srs>EPSG:27700</srs>
      <resolutions>0.5263551401977046 1.0527102803954091 2.1054205607908183 4.210841121581637 8.421682243163273 12.632523364744909 16.843364486326546 21.054205607908184</resolutions>
      <units>m</units>
      <size>256 256</size>
   </grid>

   <tileset name="aerial-photos">
      <source>cco</source>
      <cache>disk</cache>
      <grid>BNG</grid>
      <format>JPEG</format>
   </tileset>
   <service type="wms" enabled="true">
      <!-- this service should actually be called "ogc". It is different from the other
           services as it does not listen on the /wms endpoint, but directly on /.
           It will intercept wms getmap requests that can be treated from configured
           tilesets, and can optionally forward all the rest to (an)other server(s)
           TODO: this needs way more documenting
      <forwarding_rule name="foo rule">
            <append_pathinfo>true</append_pathinfo>
            <http>
               <url>http://localhost/geocacheproxy</url>
            </http>
      </forwarding_rule>
      -->
      <!-- full_wms
           configure response to wms requests that are not aligned to a tileset's grids.
           responding to requests that are not in the SRS of a configured grid is not supported, but
           this should never happen as only the supported SRSs are publicized in the capabilities
           document.

           allowed values are:
             - error: return a 404 error (default)
             - assemble: build the full image by assembling the tiles from the cache
             - forward: forward the request to the configured source.
      -->
      <full_wms>assemble</full_wms>
      <!-- resample mode
      filter applied when resampling tiles for full wms requests.
      can be either:
      - nearest : fastest, poor quality
      - bilinear: slower, higher qulity
      -->
      <resample_mode>bilinear</resample_mode>
      
      <!-- format
         image format to use when assembling tiles
      -->
      <!--format>myjpeg</format-->

   </service>
</geocache>
